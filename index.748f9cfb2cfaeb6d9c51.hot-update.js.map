{"version":3,"file":"index.748f9cfb2cfaeb6d9c51.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;;AACA;;AAEA;AAMA;AAJA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAJA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AATA;AAcA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;AC1EA","sources":["webpack://SoccerStat/./src/features/CompetitionCalendar/components/index.jsx","webpack://SoccerStat/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { Button } from 'antd';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss';\nimport '../../../pages/Competition/antd.css';\nimport MatchesList from '../../../components/MatchesList';\nimport { useSortedMatchesByDateRange } from '../../../utils/hooks';\nimport MyRangePicker from '../../../components/MyRangePicker';\n\nconst UTC_FORMAT = moment.ISO_8601;\nconst getDate = (date) => moment(date, UTC_FORMAT);\n\nconst CompetitionCalendar = (\n  {\n    loading,\n    error,\n    matches,\n  },\n) => {\n  const navigate = useNavigate();\n  const { competitionId, dateRange } = useParams();\n  const [rangeValue, setRangeValue] = useState(['', '']);\n  const sortedMatchesByTime = useMemo(() => {\n    return [...matches].sort((a, b) => getDate(b.utcDate).diff(getDate(a.utcDate)));\n  }, [matches]);\n  const [sortedMatches] = useSortedMatchesByDateRange(rangeValue, sortedMatchesByTime);\n\n  useEffect(() => {\n    if (dateRange) {\n      const [dateFrom, dateTo] = dateRange.split('_');\n      setRangeValue([dateFrom, dateTo]);\n    }\n  }, []);\n\n  const onChange = (dates, dateStrings) => {\n    setRangeValue([(dateStrings[0]), dateStrings[1]]);\n    if (dateStrings.includes('')) {\n      navigate(`/competition/${competitionId}/`);\n    } else {\n      const dateRangesUrl = `${dateStrings[0]}_${dateStrings[1]}`;\n      navigate(`/competition/${competitionId}/${dateRangesUrl}`);\n    }\n  };\n  const onClick = (e) => {\n    e.preventDefault();\n    navigate(`/competition/${competitionId}/teams`);\n  };\n\n  return (\n    <div>\n      {!loading && !error && (\n        <>\n          <Button type=\"primary\" block className=\"button-link\" onClick={onClick}>\n            Show participating teams\n          </Button>\n          <MyRangePicker rangeValue={rangeValue} handleChange={onChange} />\n        </>\n      )}\n      <div className={styles['league-list-wrap']}>\n        <MatchesList loading={loading} error={error} matches={sortedMatches} />\n      </div>\n    </div>\n  );\n};\n\nCompetitionCalendar.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  matches: PropTypes.array.isRequired,\n};\n\nexport default CompetitionCalendar;\n","__webpack_require__.h = () => (\"c1b122148bcd82f98480\")"],"names":[],"sourceRoot":""}