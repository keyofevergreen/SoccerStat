{"version":3,"file":"index.8003fe3ce932874be393.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAJA;AAOA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;ACtDA","sources":["webpack://SoccerStat/./src/features/TeamCalendar/components/index.jsx","webpack://SoccerStat/webpack/runtime/getFullHash"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useNavigate, useParams } from 'react-router';\nimport { useEffect, useMemo, useState } from 'react';\nimport moment from 'moment';\nimport { useSortedMatchesByDateRange } from '../../../utils/hooks';\nimport MatchesList from '../../../components/MatchesList';\nimport MyRangePicker from '../../../components/MyRangePicker';\n\nconst UTC_FORMAT = moment.ISO_8601;\nconst getDate = (date) => moment(date, UTC_FORMAT);\n\nconst TeamCalendar = ({ loading, error, matches }) => {\n  const navigate = useNavigate();\n  const { teamId, dateRange } = useParams();\n  const [rangeValue, setRangeValue] = useState(['', '']);\n  // eslint-disable-next-line\n  const sortedMatchesByTime = useMemo(() => {\n    return [...matches].sort((a, b) => getDate(b.utcDate).diff(getDate(a.utcDate)));\n  }, [matches]);\n  const [sortedMatches] = useSortedMatchesByDateRange(rangeValue, sortedMatchesByTime);\n\n  useEffect(() => {\n    if (dateRange) {\n      const [dateFrom, dateTo] = dateRange.split('_');\n      setRangeValue([dateFrom, dateTo]);\n    }\n  }, []);\n\n  const onChange = (dates, dateStrings) => {\n    setRangeValue([(dateStrings[0]), dateStrings[1]]);\n    if (dateStrings.includes('')) {\n      navigate(`/team/${teamId}`);\n    } else {\n      const dateRangesUrl = `${dateStrings[0]}_${dateStrings[1]}`;\n      navigate(`/team/${teamId}/${dateRangesUrl}`);\n    }\n  };\n  return (\n    <div>\n      {!loading && !error && (\n        <MyRangePicker rangeValue={rangeValue} handleChange={onChange} />\n      )}\n      <MatchesList loading={loading} error={error} matches={sortedMatches} />\n    </div>\n  );\n};\n\nTeamCalendar.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n  // eslint-disable-next-line\n  matches: PropTypes.array.isRequired,\n};\n\nexport default TeamCalendar;\n","__webpack_require__.h = () => (\"2343e6723fbc93c6bfa8\")"],"names":[],"sourceRoot":""}